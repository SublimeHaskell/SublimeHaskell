[
    {
        "caption": "Preferences: SublimeHaskell - Settings",
        "command": "edit_settings",
        "args":
        {
            "base_file": "${packages}/SublimeHaskell/Settings/SublimeHaskell.sublime-settings",
            "default": "{\n\t$0\n}\n"
        }
    },
    {
        "caption": "Preferences: SublimeHaskell - Key Bindings",
        "command": "edit_settings",
        "args":
        {
            "base_file": "${packages}/SublimeHaskell/Keymaps/Default.sublime-keymap",
            "default": "{\n\t$0\n}\n"
        }
    },
    {
        "caption": "SublimeHaskell: Show type",
        "command": "sublime_haskell_show_type"
    },
    {
        "caption": "SublimeHaskell: Show types",
        "command": "sublime_haskell_show_types"
    },
    {
        "caption": "SublimeHaskell: Show/hide all types",
        "command": "sublime_haskell_toggle_all_types"
    },
    {
        "caption": "SublimeHaskell: Insert type",
        "command": "sublime_haskell_insert_type"
    },
    {
        "caption": "SublimeHaskell: Expand selection to Expression",
        "command": "sublime_haskell_expand_selection_expression"
    },
    {
        "caption": "SublimeHaskell: Show symbol info",
        "command": "sublime_haskell_symbol_info"
    },
    {
        "caption": "SublimeHaskell: Toggle symbol info panel",
        "command": "sublime_haskell_toggle_symbol_info"
    },
    {
        "caption": "SublimeHaskell: Browse module",
        "command": "sublime_haskell_browse_module"
    },
    {
        "caption": "SublimeHaskell: Build",
        "command": "sublime_haskell_build",
        "args": { "task": "build" }
    },
    {
        "caption": "SublimeHaskell: Typecheck build (no codegen)",
        "command": "sublime_haskell_build"
    },
    {
        "caption": "SublimeHaskell: Clean",
        "command": "sublime_haskell_build",
        "args": { "task": "clean" }
    },
    {
        "caption": "SublimeHaskell: Configure",
        "command": "sublime_haskell_build",
        "args": { "task": "configure" }
    },
    {
        "caption": "SublimeHaskell: Rebuild",
        "command": "sublime_haskell_build",
        "args": { "task": "rebuild" }
    },
    {
        "caption": "SublimeHaskell: Install",
        "command": "sublime_haskell_build",
        "args": { "task": "install" }
    },
    {
        "caption": "SublimeHaskell: Test",
        "command": "sublime_haskell_build",
        "args": { "task": "test" }
    },
    {
        "caption": "SublimeHaskell: Run",
        "command": "sublime_haskell_run"
    },
    {
        "caption": "SublimeHaskell: Freeze dependencies",
        "command": "sublime_haskell_build_cabal_only",
        "args": { "task": "freeze" }
    },
    {
        "caption": "SublimeHaskell: Benchmarks",
        "command": "sublime_haskell_build",
        "args": { "task": "bench" }
    },
    {
        "caption": "SublimeHaskell: Check",
        "command": "sublime_haskell_check"
    },
    {
        "caption": "SublimeHaskell: Lint",
        "command": "sublime_haskell_lint"
    },
    {
        "caption": "SublimeHaskell: Check & Lint",
        "command": "sublime_haskell_check_and_lint"
    },
    {
        "caption": "SublimeHaskell: Stylish",
        "command": "sublime_haskell_stylish"
    },
    {
        "caption": "SublimeHaskell: HIndent",
        "command": "sublime_haskell_hindent"
    },
    {
        "caption": "SublimeHaskell: Go to declaration",
        "command": "sublime_haskell_go_to_declaration"
    },
    {
        "caption": "SublimeHaskell: Go to module",
        "command": "sublime_haskell_go_to_module"
    },
    {
        "caption": "SublimeHaskell: Eval expression",
        "command": "sublime_haskell_eval_expression"
    },
    {
        "caption": "SublimeHaskell: Expression type",
        "command": "sublime_haskell_expression_type"
    },
    {
        "caption": "SublimeHaskell: Eval selection",
        "command": "sublime_haskell_eval_selection"
    },
    {
        "caption": "SublimeHaskell: Apply to selection",
        "command": "sublime_haskell_apply_to_selection"
    },
    {
        "caption": "SublimeHaskell: Apply to selection list",
        "command": "sublime_haskell_apply_to_selection_list"
    },
    {
        "caption": "SublimeHaskell: Browse declarations",
        "command": "sublime_haskell_browse_declarations"
    },
    {
        "caption": "SublimeHaskell: Find declarations",
        "command": "sublime_haskell_find_declarations"
    },
    {
        "caption": "SublimeHaskell: Hayoo",
        "command": "sublime_haskell_hayoo"
    },
    {
        "caption": "SublimeHaskell: Search declarations everywhere",
        "command": "sublime_haskell_search"
    },
    {
        "caption": "SublimeHaskell: Insert import for symbol",
        "command": "sublime_haskell_insert_import_for_symbol"
    },
    {
        "caption": "SublimeHaskell: Clean imports",
        "command": "sublime_haskell_clean_imports"
    },
    {
        "caption": "SublimeHaskell: Reinspect all",
        "command": "sublime_haskell_reinspect_all"
    },
    {
        "caption": "SublimeHaskell: Scan docs and infer types",
        "command": "sublime_haskell_infer_docs"
    },
    {
        "caption": "SublimeHaskell: Scan docs in current view",
        "command": "sublime_haskell_infer_docs",
        "args": { "docs": true, "infer": false }
    },
    {
        "caption": "SublimeHaskell: Infer types in current module",
        "command": "sublime_haskell_infer_docs",
        "args": { "docs": false, "infer": true }
    },
    {
        "caption": "SublimeHaskell: Go to next error",
        "command": "sublime_haskell_next_error"
    },
    {
        "caption": "SublimeHaskell: Go to previous error",
        "command": "sublime_haskell_previous_error"
    },
    {
        "caption": "SublimeHaskell: Show error panel",
        "command": "show_panel",
        "args": { "panel": "output.haskell_error_checker" }
    },
    {
        "caption": "Cabal: List",
        "command": "sublime_haskell_cabal_list"
    },
    {
        "caption": "SublimeHaskell: Auto fix",
        "command": "sublime_haskell_auto_fix"
    },
    {
        "caption": "SublimeHaskell: Choose/change backend",
        "command": "sublime_haskell_choose_backend"
    },
    {
        "caption": "SublimeHaskell: Start backend",
        "command": "sublime_haskell_start_backend"
    },
    {
        "caption": "SublimeHaskell: Stop backend",
        "command": "sublime_haskell_stop_backend"
    },
    {
        "caption": "SublimeHaskell: Restart backend",
        "command": "sublime_haskell_restart_backend"
    },
    {
       "caption": "SublimeHaskell: Switch Stack Configs",
       "command": "sublime_haskell_stack_config_switch"
    }
]
